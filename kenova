function kenova(){

  ADMINAPIFILE=".supernova"

  function runnova(){
      if [[ "$1" == "lus" || "$1" == "luk" ]];then
        export NOVA_URL=$V1IDENTITY
        shift; lnova $@
      else
        export OS_AUTH_URL=$IDENTITY
        nova $@
      fi
  }
  
  function line(){
    echo -e "================================================================\n"
  }
  
  function envunset(){
    unset IDENTITY V1IDENTITY NOVA_SERVICE_NAME NOVA_URL NOVA_VERSION NOVA_REGION_NAME NOVACLIENT_INSECURE NOVA_USERNAME NOVA_PASSWORD OS_AUTH_URL OS_USERNAME OS_API_KEY OS_PASSWORD OS_TENANT_NAME NOVA_PROJECT_ID OS_AUTH_SYSTEM OS_REGION_NAME PASSWORD PASSKEY
  }

  function envset(){
    export NOVA_VERSION=2
    export NOVA_SERVICE_NAME=cloudServersOpenStack
    export OS_AUTH_SYSTEM="rackspace"
    export OS_USERNAME=$OS_USER_USERNAME
    export NOVA_USERNAME=$OS_USERNAME
    export OS_PASSWORD=$OS_USER_PASSWORD
    export NOVA_PASSWORD=$OS_PASSWORD
    export OS_TENANT_NAME=$OS_USER_USERNAME
    export NOVA_PROJECT_ID=$OS_TENANT_NAME
  }
  
  function setkeyring(){
    python -c "import keyring; keyring.set_password('""kenova""','""$ENV:$ENVVAR""','""$MYPASSWORD""')"
  }

  function getkeyring(){
    python -c "import keyring;print keyring.get_password('""kenova""', '""$ENV:$PASSKEY""')"
  }
  
  function keyring(){
    ENV=$2
    ENVVAR=$3
    if [ -z "$ENV" ];then
      echo -e "You need to specify an end point.\n"
    else
      if [ -z "$(grep "\[$ENV\]" $ADMINAPIFILE)" ];then
        echo -e "\nI did not find the \"\033[1;35m$ENV\033[0m\" endpoint\nyou should setup your \"\033[1;35m$ADMINAPIFILE\033[0m\" file accordingly.\n"
      elif [ -z "$ENVVAR" ];then
        echo -e "You need to specify an environment \033[1;35m$2\033[0m.\n"
      else
        echo -e "\nYou are setting a password in keyring\nYou have set an Endpoint for:\t\033[1;32m$ENV\033[0m\nYou have set an Environment of:\t\033[1;32m$ENVVAR\033[0m"
        read -s -p "Enter Password  : " MYPASSWORD
        setkeyring
        echo -e "\n\nWe have setup a Key-Ring Password for your Environment \"\033[1;32m$ENV:$ENVVAR\033[0m\"\n"
      fi
    fi
    unset ENV ENVVAR
  }

case "$1" in
  new)
    echo "Setting Variables for Impersonation"
    line
    export OS_USER_USERNAME=$2
    export OS_USER_PASSWORD=$3
  ;;
  admin)
    line
    echo "Accessing Admin Methods for $2 from $ADMINAPIFILE"
    line
    ENV=$2
    for env in $(sed -n -e '/^#/d' -e "/\[$ENV\]/,/^$/p" $HOME/$ADMINAPIFILE | sed -e '/^\[/d'); do
      if [ $(echo $env | grep "USE_KEYRING") ]; then
        PASSKEY=$(awk -F '=' '/OS_PASSWORD/ || /NOVA_API_KEY/ {print $1}' $env)
        PASSWORD=getkeyring
        export $PASSKEY=$PASSWORD
      else
        export $env;
      fi
    done;
    shift 2
    runnova $@
    envunset
  ;;
  set)
    keyring $@
  ;;
  *)
    envset
    export OS_REGION_NAME="$1"
    line
    echo -e "You are presently impersonating: $OS_USER_USERNAME in $OS_REGION_NAME"
    line
    if [[ "$OS_REGION_NAME" == "ord" || "$OS_REGION_NAME" == "dfw" || "$OS_REGION_NAME" == "syd"  ]];then
      IDENTITY="https://identity.api.rackspacecloud.com/v2.0/"
      shift 1; runnova $@
    elif [ "$OS_REGION_NAME" == "lon" ];then
      IDENTITY="https://lon.identity.api.rackspacecloud.com/v2.0/"
      shift 1; runnova $@
    elif [ "$OS_REGION_NAME" == "lus" ];then
      V1IDENTITY="https://identity.api.rackspacecloud.com/v1.0/"
      runnova $@
    elif [ "$OS_REGION_NAME" == "luk" ];then
      V1IDENTITY="https://lon.identity.api.rackspacecloud.com/v1.0/"
      runnova $@
    else
      echo "No Valid Option Provided"
      line
    fi
    envunset
  ;;
esac
}